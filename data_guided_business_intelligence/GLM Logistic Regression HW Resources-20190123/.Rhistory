plot(probabilities, posterior,
type = "l", ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
par(mfrow=c(1,1))
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==1){
plot(probabilities, posterior,
type = "l", ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==1){
plot(probabilities, posterior,
type = "l", ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==1){
plot(probabilities, posterior,
type = "l", ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==6){
plot(probabilities, posterior,
type = "l", ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==6){
plot(probabilities, posterior, y=0:10,
type = "l", ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
probabilities
posterior
probabilities
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==6){
plot(probabilities, posterior,
type = "l", ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==6){
plot(probabilities, posterior,y=0:10,
type = "l", ylab = "density", xlab = "Posterior Prob.")
axis(2, at=c(1,2,3,4,5), las=1)
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==6){
plot(probabilities, posterior,y=0:10,
type = "l", ylab = "density", xlab = "Posterior Prob.")
axis(2, at=c(1,2,3,4,5,6), las=1)
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==6){
plot(probabilities, posterior,y=0:10,
type = "l", ylab = "density", xlab = "Posterior Prob.")
axis(2, at=c(2,4,6,8,10,12), las=1)
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==6){
plot(probabilities, posterior,y=0:10,
type = "l", ylab = "density", xlab = "Posterior Prob.")
axis(2, at=c(2,4,6,8,10), las=1)
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==6){
plot(probabilities, posterior,y=0:10,
type = "l", ylab = "density", xlab = "Posterior Prob.")
axis(2, las=1)
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==6){
plot(probabilities, posterior,y=0:10,
type = "l", ylab = "density", xlab = "Posterior Prob.")
axis(2, las=1)
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==6){
plot(probabilities, posterior,y=0:10,
type = "l", ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==6){
plot(probabilities, posterior,
type = "l", ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
par(mfrow=c(1,1))
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==1){
plot(probabilities, posterior,
type = "l", ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
par(mfrow=c(1,1))
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==1){
plot(probabilities, posterior,
type = "l", ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
par(mfrow=c(1,1))
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
yticks <- seq(2, 12, 1)
if (i==1){
plot(probabilities, posterior,
ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
par(mfrow=c(1,1))
par(mfrow=c(1,1))
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==1){
plot(probabilities, posterior,
ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
par(mfrow=c(1,1))
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==1){
plot(probabilities, posterior,
ylab = "density", xlab = "Posterior Prob.",y=0:12)
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==1){
plot(probabilities, posterior,
ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
par(mfrow=c(1,1))
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==1){
plot(probabilities, posterior,
ylab = "density", xlab = "Posterior Prob.",y=0:12,x=0:1.2)
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
par(mfrow=c(1,1))
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==1){
plot(probabilities, posterior,
ylab = "density", xlab = "Posterior Prob.",y=0:12,x=0:12)
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==1){
plot(probabilities, posterior,
ylab = "density", xlab = "Posterior Prob.",y=0:12,x=0:2)
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==1){
plot(probabilities, posterior,
ylab = "density", xlab = "Posterior Prob.",y=0:12,x=0:1.1)
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==1){
plot(probabilities, posterior,
ylab = "density", xlab = "Posterior Prob.",y=0:12)
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i,y=0:12)
}
}
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==1){
plot(probabilities, posterior,
ylab = "density", xlab = "Posterior Prob.",y=0:12,x=1.2)
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i,y=0:12,x=1.2)
}
}
par(mfrow=c(1,1))
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==1){
plot(probabilities, posterior,
ylab = "density", xlab = "Posterior Prob.",y=0:12,x=1.2)
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i,y=0:12,x=1.2)
}
}
for (i in 1:5) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==1){
plot(probabilities, posterior,
ylab = "density", xlab = "Posterior Prob.")
legend("topleft",c("Russel Westbrook", "James Harden", "Kawhi Leonard", "LeBron James",
"Isaiah Thomas"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
for (i in 6:10) {
prior = dbeta(probabilities, a, b)
posterior = dbeta(probabilities, a + clutch_makes[i], b + clutch_attempts[i]
- clutch_makes[i])
if (i==6){
plot(probabilities, posterior,
type = "l", ylab = "Density", xlab = "Posterior Prob.")
legend("topleft",c("Stephen Curry", "Giannis Antetokounmpo", "John Wall",
"Anthony Davis", "Kevin Durant"),pch=c(1,2,3,4,5))
}
else{
points(probabilities, posterior, pch=i)
}
}
install.packages("readxl")
install.packages("dummies")
install.packages("caTools")
install.packages("reshape")
library('dummies')
library("readxl")
library('caTools')
library(dplyr)
library(tidyr)
library(reshape)
addClusters <- function(pivot_table) {
pivot_table_rows <- dim(pivot_table)[1]
pivot_table['parent'] <- pivot_table[1]
for(i in 1:(pivot_table_rows-1)){
for(j in (i+1):pivot_table_rows){
if(abs(pivot_table[i,2] - pivot_table[j,2]) < 0.05){
pivot_table[j, 'parent'] <- pivot_table[i, 'parent']
}
}
}
return (pivot_table)
}
replaceChildValues <- function(original_df, parentTable, coloum) {
rows_df = dim(original_df)[1]
rows_parent = dim(parentTable)[1]
for(i in 1:rows_df){
for(j in 1:rows_parent){
if(parentTable[j, coloum] == original_df[i, coloum]){
original_df[i, coloum] = parentTable[j, 'parent']
}
}
}
return (original_df)
}
currentDir <- getwd()
setwd(currentDir)
eBayAuctionData <- read_excel("eBayAuctions.xls")
setwd("~/Desktop/NCSU_Courses/CSC_591_ADBI/Lectures/Slides/GLM Logistic Regression HW Resources-20190123")
eBayAuctionData <- read_excel("eBayAuctions.xls")
currentDir <- getwd()
setwd(currentDir)
eBayAuctionData <- read_excel("eBayAuctions.xls")
ebay_melt <- melt(eBayAuctionData, measure.vars = "Competitive?")
ebay_melt <- melt(eBayAuctionData, measure.vars = "Competitive?")
ebay_castCategory <- cast(ebay_melt, Category  ~ variable , mean)
ebay_castCurrency <- cast(ebay_melt, currency  ~ variable , mean)
ebay_castDuration <- cast(ebay_melt, Duration  ~ variable , mean)
ebay_castEndDay <- cast(ebay_melt, endDay  ~ variable , mean)
ebay_castCategoryParent = addClusters(ebay_castCategory)
ebay_castCurrencyParent = addClusters(ebay_castCurrency)
ebay_castDurationParent = addClusters(ebay_castDuration)
ebay_castEndDayParent = addClusters(ebay_castEndDay)
eBayAuctionData <- replaceChildValues(eBayAuctionData, ebay_castCategoryParent, 'Category')
eBayAuctionData <- replaceChildValues(eBayAuctionData, ebay_castCurrencyParent, 'currency')
eBayAuctionData <- replaceChildValues(eBayAuctionData, ebay_castDurationParent, 'Duration')
eBayAuctionData <- replaceChildValues(eBayAuctionData, ebay_castEndDayParent, 'endDay')
eBayAuctionData$Category <- as.factor(eBayAuctionData$Category)
eBayAuctionData$currency <- as.factor(eBayAuctionData$currency)
eBayAuctionData$Duration <- as.factor(eBayAuctionData$Duration)
eBayAuctionData$endDay <- as.factor(eBayAuctionData$endDay)
eBayAuctionDataDummy <- dummy_cols(eBayAuctionData)
install.packages("dummies")
install.packages("dummies")
library('dummies')
